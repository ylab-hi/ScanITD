[tool.poetry]
name = "scanitd"
version = "0.9.1"
description = "ScanITD"
authors = [
    "Ting-You Wang <tywang@northwestern.edu>",
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/ylab-hi/ScanITD"
repository = "https://github.com/ylab-hi/ScanITD"
documentation = "https://scanitd.readthedocs.io"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[tool.poetry.urls]
Changelog = "https://github.com/ylab-hi/ScanITD/releases"

[tool.poetry.dependencies]
python = "^3.9"
numpy = "^2.0.0"
pysam = "^0.22.0"
pyfaidx = "^0.7.2"
psutil = "^5.9.5"
ssw-py = "^1.0.1"
loguru = "^0.7.0"
typer = "^0.12.5"
rich = "^13.7.0"

[tool.poetry.extras]

[tool.poetry.build]
generate-setup-file = true

[tool.poetry.scripts]
scanitd = "scanitd.cli.cli:app"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.6"
codespell = "^2.2.2"
ipdb = "^0.13.11"
isort = "^5.12.0"
pytest = "^7.4.3"
coverage = { extras = ["toml"], version = "^7.3" }
safety = "^2.1.1"
mypy = "^1.7"
typeguard = "^4.1.5"
xdoctest = { extras = ["colors"], version = "^1.1.2" }
sphinx = "^7.2.6"
myst-parser= "3.0.0"
sphinx-autobuild = "^2021.3.14"
pre-commit = "^3.3.3"
flake8 = "^6.1.0"
black = "^23.3"
bandit = "^1.7.3"
flake8-bandit = ">=4.1"
flake8-bugbear = "^23.9.16"
flake8-docstrings = "^1.6.0"
flake8-rst-docstrings = "^0.3.0"
pep8-naming = "^0.13.2"
reorder-python-imports = "^3.8.2"
pre-commit-hooks = "^4.3.0"
sphinx-rtd-theme = "^1.3.0"
sphinx-click = "^5.0.1"
Pygments = "^2.17.1"
pytest-mock = "^3.11.1"
nox = "^2023.4.22"
flake8-broken-line = "^1.0.0"
flake8-comprehensions = "^3.13.0"
flake8-eradicate = "^1.5.0"
flake8-simplify = "^0.21.0"
pynvim = "^0.4.3"
flake8-2020 = "^1.8.1"
flake8-alfred = "^1.1.1"
cohesion = "^1.0.0"


[tool.mypy]
strict = false
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
exclude = "cppext"
allow_untyped_calls = true
ignore_missing_imports = true

[tool.pytest.ini_options]
norecursedirs = ["cppext"]

[tool.bandit]
exclude_dirs = ['tests']
skips = ["B602", "B404", "B603"]

[tool.isort]
profile = "black"

[tool.ruff]
lint.select = [
    # "ANN",
    # "D",
    "A",
    "F",
    "E",
    "W",
    "C90",
    "I",
    "UP",
    "N",
    "YTT",
    "TID",
    "S",
    "BLE",
    "FBT",
    "PLR",
    "B",
    "B9",
    "A",
    "C4",
    "T10",
    "EM",
    "ICN",
    "T20",
    "Q",
    "RET",
    "SIM",
    "ARG",
    "DTZ",
    "ERA",
    "PD",
    "PGH",
    "PLC",
    "PLE",
    "PLW",
    "RUF",
    "PL",
    "TD",
    "FIX",
    "PTH",
    "TCH",
    "SLOT",
    "PT",
    "PYI",
    "PIE",
    "ISC",
    "FA",
    "EXE",
    # "CPY",
    "COM",
]
line-length = 200
exclude = ["tests"]
lint.ignore = [
    "ANN001",
    "D203",
    "D213",
    "PGH003",
    "PLR0911", # Too many return statements
    "PLR0913", # Too many arguments to function call
    "PLR0912", # Too many branches
    "PLR0915", # Too many statements
    "DTZ005",  # Without `tz` argument
    "C901",    # Too complex
    'PLC0415',
    'PLR1702',
    'PLR0917',
    # formater conflict
    'COM812',
    'COM819',
    'D206',
    'ISC001',
    'Q000',
    'Q001',
    'Q002',
    'Q003',
    'W191',
    "PLR0904",
]
target-version = "py310"


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
# magic-trailing-comma = "respect"
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[tool.ruff.lint.per-file-ignores]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
major_version_zero = true

[build-system]
requires = ["poetry-core>=1.6.0", "setuptools>=68.0.0"]
build-backend = "poetry.core.masonry.api"
